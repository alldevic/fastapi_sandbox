version: "3.8"

services:
  db:
    container_name: ${COMPOSE_PROJECT_NAME}_${POSTGRES_CONTAINER_NAME}
    env_file: .env
    image: postgres:14
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_SU}
      POSTGRES_PASSWORD: ${POSTGRES_SU_PASS}
    networks:
      private_network:
        ipv4_address: ${POSTGRES_HOST}
  
  unit:
    container_name: ${COMPOSE_PROJECT_NAME}_${UNIT_CONTAINER_NAME}
    env_file: .env
    build: 
      context: ./app
      args:
        - BASE_IMAGE=${COMPOSE_PROJECT_NAME}_${UNIT_BASE_IMAGE_NAME}:latest
    ports:
      - 8000:8000
      - 8081:8081
    volumes:
      - ./config/:/docker-entrypoint.d/:ro
      - ./app/:/app/
    networks:
      private_network:
        ipv4_address: ${UNIT_HOST}
      
  node:
    container_name: ${COMPOSE_PROJECT_NAME}_${NODE_CONTAINER_NAME}
    env_file: .env
    build: 
      context: ./node
    restart: always
    working_dir: /app/
    command: sh -c "yarn && yarn cache clean && yarn start"
    volumes:
      - ./node/:/app/
    networks:
      private_network:
        ipv4_address: ${NODE_HOST}

networks:
  proxy:
    external: true
  private_network:
    ipam:
      driver: default
      config:
        - subnet: ${DOCKER_SUBNET}

volumes:
  db_data:
    external:
      name: ${COMPOSE_PROJECT_NAME}_${POSTGRES_VOLUME_DATA_NAME}